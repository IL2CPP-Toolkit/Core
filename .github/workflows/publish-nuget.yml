name: Publish Nuget

on:
  push:
    branches:
      - main
      - v*.*

jobs:
  build:
    runs-on: windows-latest

    env:
      IS_CI: true
      Solution_Name: Core.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=Release

      # Build + Pack
      - name: Build
        run: dotnet pack $env:Solution_Name --output publish /p:Configuration=Release -p:DeployOnBuild=true /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg /p:PublicRelease=true

      # NuGet Push
      - name: Push package to nuget.org
        run: |
          dotnet nuget push publish\*.nupkg -k $env:PUBLISH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push publish\*.snupkg -k $env:PUBLISH_TOKEN -s https://www.nuget.org/api/v2/symbolpackage --skip-duplicate
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
